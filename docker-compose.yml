# also called local.ymml
version: '3'

services:
  nginx:
      build: './compose/local/nginx/.'
      ports:
        - '8080:80'
      depends_on:
        - web
  web:
    build:
      context: '.'
      dockerfile: './compose/local/django/Dockerfile'
    image: 'manati'
    env_file:
      - '.env'
      - '.env-docker'
    expose:
      - "8000"
    ports:
      - '127.0.0.1:8000:8000'
    command: 'bash -c "python manage.py migrate && python manage.py check_external_modules && python manage.py collectstatic --noinput && gunicorn config.wsgi:application -w 2 -b :8000 --capture-output --enable-stdio-inheritance --log-level=debug --access-logfile=- --log-file=-"'
    volumes:
      - '.:/code'
      - 'manati_cachedata:/cache'
      - 'manati_mediadata:/media'
    links:
      - postgres
      - redis
    depends_on:
      - postgres
      - redis

  postgres:
    restart: always
    container_name: 'postgres'
    image: 'postgres:9.6.5'
    env_file:
      - '.env-docker'
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - 'manati_pgdata:/var/lib/postgresql/data/'
      - 'manati_pglog:/var/log/postgresql'
      - 'manati_pgetc:/etc/postgresql'

  redis:
    container_name: 'redis'
    image: 'redis:3.2.0'
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - 'manati_redisdata:/data'

  rqworker:
    build:
      context: .
      dockerfile: './compose/local/django/Dockerfile'
    env_file:
      - '.env-docker'
    command: "bash -c 'python manage.py rqworker high default low'"
    volumes:
      - .:/code
    depends_on:
      - redis

volumes:
  manati_pgdata:
  manati_pglog:
  manati_pgetc:
  manati_redisdata:
  manati_cachedata:
  manati_mediadata:


